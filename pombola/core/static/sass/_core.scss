// --------------------------------------------------------------

// _CORE CSS
// mzalendo.com

// AUTHOR: Josh Angell, Supercool
// josh [at] supercooldesign.co.uk

// 1. VARIABLES
// 2. MIXINS
// 3. FUNCTIONS

// --------------------------------------------------------------
@import "compass";


// Would like to add the size for the media queries as variables too, but that
// is not currently supported. Should be from Sass 3.2.0 onwards though.

// 2. MIXINS
// --------------------------------------------------------------
// Green Gradient
@mixin gradient1 {
  background: $colour_primary_light;
  @include background(linear-gradient($colour_primary_light, $colour_primary)); }

@mixin gradient1b {
  background: $colour_primary;
  @include background(linear-gradient($colour_primary, $colour_primary_light)); }

// Light Grey Gradient
@mixin gradient2 {
  background: #ebebeb;
  @include background(linear-gradient(#ebebeb, #f5f5f5)); }

@mixin gradient2b {
  background: #f5f5f5;
  @include background(linear-gradient(#f5f5f5, #ebebeb)); }

// Button reset
@mixin button-reset {
  cursor: pointer;
  display: block;
  border: none;
  padding: 0;
  margin: 0;
  width: auto;
  height: auto;
  text-indent: -999999px;
  @include border-radius(2px); }

@mixin button-reset-text {
  @include inline-block;
  cursor: pointer;
  background: $colour_grey;
  color: $colour_white;
  text: {
    decoration: none;
    transform: uppercase; };
  font: {
    size: 10px;
    weight: bold; };
  line-height: 1;
  padding: 5px 8px;
  @include border-radius(2px);
  &:hover {
    background: $colour_grey / 0.8;
    color: $colour_white;
    text-decoration: none; } }

@mixin button-text-red {
  @include button-reset-text;
  background: $colour_red;
  &:hover {
    background: $colour_red / 0.7; } }

@mixin button-text-green {
  @include button-reset-text;
  background: $colour_primary_light;
  &:hover {
    background: $colour_primary_light / 0.9; } }

@mixin big-button-reset-text($rad: 5px) {
  @include button-reset-text;
  text-transform: none;
  font-size: 14px;
  padding: 5px 8px;
  @include inline-block;
  @include border-radius($rad); }

@mixin big-button-text-green {
  @include big-button-reset-text;
  background: $colour_primary_light;
  @include background(linear-gradient($colour_primary_light / 0.9, $colour_primary_light));
  &:hover {
    background: $colour_primary_light / 0.9;
    @include background(linear-gradient($colour_primary_light, $colour_primary_light / 0.9)); } }

@mixin big-button-text-red {
  @include big-button-reset-text;
  background: $colour_red;
  @include background(linear-gradient($colour_red / 0.7, $colour_red));
  &:hover {
    background: $colour_red / 0.7;
    @include background(linear-gradient($colour_red, $colour_red / 0.7)); } }

// list resets
@mixin list-reset-copy {
  padding-left: 30px;
  margin-bottom: 20px;
  li {
    font-size: 14px;
    line-height: 20px;
    list-style: disc;
    margin-bottom: 10px;
    background: none;
    padding: 0; } }

@mixin list-reset-soft {
  list-style-type: none;
  padding: 0;
  margin: 0;
  li {
    list-style-type: none;
    padding: 0;
    margin: 0;
    border: 0; } }

@mixin list-reset {
  list-style-type: none;
  padding: 0;
  margin: 0;
  li {
    list-style-type: none;
    padding: 0;
    margin: 0;
    border: 0;
    float: left;
    display: inline;
    a {
      float: left;
      display: block; } } }

@mixin list-reset-nopad {
    list-style-type: none;
    margin: 0;
    padding:0;
    li {
      list-style-type: none;
      margin: 0;
      border: 0; } }


@mixin unstyled-list {
    padding-left: 0;
    margin-bottom: 0;
    li {
        list-style: none outside none;
    }
}

@mixin clearfix {
    *zoom: 1;

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

.clearfix {
  @include clearfix();
}

@mixin display-flex() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values, $values2009: 0) {
    -webkit-box-flex: $values2009;
    -moz-box-flex: $values2009;
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

@mixin flex-wrap($wrap) {
    -webkit-box-wrap: $wrap;
    -webkit-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin align-items($alignment) {
    -webkit-box-align: $alignment;
    -webkit-align-items: $alignment;
    -ms-flex-align: $alignment;
    align-items: $alignment;
}

@mixin flex-direction($direction) {
    @if ($direction == column) {
        -webkit-box-orient: vertical;
    } @elseif ($direction == row) {
        -webkit-box-orient: horizontal;
    }
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    -webkit-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin justify-content($alignment) {
    -webkit-justify-content: $alignment;
    -moz-justify-content: $alignment;
    -ms-justify-content: $alignment;
    justify-content: $alignment;
}

@mixin order($order) {
  // 2009 syntax
  -webkit-box-ordinal-group: $order;
  -moz-box-ordinal-group: $order;

   // 2011 syntax https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-order
  -ms-flex-order: $order;
  flex-order: $order;

  // Modern syntax
  -webkit-order: $order;
  -ms-order: $order;
  order: $order;
}

// .ellipsis {
//   text-overflow: ellipsis;
//   overflow: hidden;
//   white-space: nowrap;
// }

// textarea[contenteditable] {-webkit-appearance: none;}

// 3. FUNCTIONS
// --------------------------------------------------------------
